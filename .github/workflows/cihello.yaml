name: CI Pipeline

# Trigger the workflow on push or pull requests to the main branch
on:
  push:
    branches:
      - main
      - CI/CD-Pipeline
  pull_request:
    branches:
      - main
      - CI/CD-Pipeline

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python for the backend
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Install dependencies for Python (backend)
      - name: Install Backend Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt  # Ensure the correct path if needed

      # Run Linting for Python Code in the 'backend' folder
      - name: Lint Python Code
        run: |
          pip install flake8
          flake8 backend  # Assuming the Python code is inside the 'backend' folder

      # Run Unit Tests for Backend in the 'tests' folder
      - name: Run Unit Tests
        run: |
          pip install pytest  # Install pytest
          pytest tests  # Run tests in the 'tests' directory

      # Run Snyk Dependency Scan for Backend
      - name: Run Snyk Dependency Scan
        uses: snyk/actions/python@master
        with:
          args: --file=backend/requirements.txt  # Ensure the correct path if needed
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Install and run Snyk Code Scan for Static Code Analysis
      - name: Install Snyk CLI for Code Scan
        uses: snyk/actions/setup@master

      - name: Run Snyk Code Scan
        run: snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
