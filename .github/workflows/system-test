name: System Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  system-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      cypress:
        image: cypress/included:12.2.0
        options: --entrypoint ""
        ports:
          - 8080:8080

    steps:
      # Step 1: Checkout the code from the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python for Django
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      # Step 3: Install dependencies for Django
      - name: Install Django dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      # Step 5: Apply migrations to set up the database
      - name: Apply migrations
        run: |
          python manage.py migrate

      # Step 6: Run system tests for Django (using Pytest or other testing tools)
      - name: Run Django system tests
        run: |
          pytest tests/system/

      # Step 7: Install dependencies for React frontend
      - name: Install React dependencies
        working-directory: ./frontend
        run: |
          npm install

      # Step 8: Run Cypress tests for React
      - name: Run Cypress tests
        working-directory: ./frontend
        run: |
          npx cypress run --headless --browser chrome

      # Step 9: Archive test results (optional)
      - name: Archive test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: path/to/test/reports

      # Step 10: Deploy to staging (optional, if you need a deploy step)
      # - name: Deploy to staging
      #   run: |
      #     ./deploy.sh
